require(Winsorize)
require(‘DescTools’)
require(DescTools)
install.pacages("DescTools")
install.packages("DescTools")
knitr::opts_chunk$set(echo = TRUE)
# Box Plot
ggboxplot(dat_collapsed, x="Condition", y="Target", fill="Duration", add = "jitter")
Packages <- c("readxl", "readr", "lme4", "tidyverse","ggplot2","jmv","lmerTest","epiDisplay","kableExtra","ggpubr","medmod","pander","margins","probemod","jtools","interactions","dabestr","DescTools")
lapply(Packages, library, character.only = TRUE)
# Read Data
setwd('~/Dropbox/Research/Task Framing/CR_Spring2019/')
dat <- read_csv('cr_spring2019.csv')
dat$Condition <- as.factor(dat$Condition)
dat$Duration <- factor(dat$Duration, levels=c(1,2), labels=c("2sec", "6sec"))
#dat$Duration <- factor(dat$Duration, levels = c("2sec","4sec"))
# Encode for the final choice
dat <- dat %>%
mutate(Target = ifelse(Resp_Coded!="new", 1, 0),
extendRT = ifelse(Duration == "2sec", RT1+2, RT1+4),
invRT = -1/extendRT)
# Read Data
dat %>%
filter(ItemID == 1) %>%
summarise(meanAge = mean(Age), sdAge = sd(Age), N = n()) %>%
round(2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
# Collapse data by individual subject level
dat_collapsed <- dat %>%
group_by(SubID, Condition, Duration) %>%
summarise(RT1 = mean(RT1),
ChoiceRT = mean(ChoiceRT),
Happy = mean(Happy),
HappyRT = mean(HappyRT),
Target = mean(Target),
ExtendRT = mean(extendRT),
invRT = mean(invRT))
# Summary Table
dat_collapsed %>%
group_by(Condition, Duration) %>%
summarise(meanRT1 = mean(RT1), sdRT1 = sd(RT1), meanExtendRT = mean(ExtendRT), sdExtendRT = sd(ExtendRT)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
descriptives(dat, vars(RT1, extendRT))
dat %>% filter(extendRT < 200) %>% descriptives(vars(RT1, extendRT))
summary(dat$extendRT)
sd(dat$extendRT)
dat %>% filter(extendRT < 100) %>% ggboxplot("Condition", "extendRT")
gghistogram(dat, "RT1", facet.by = "Condition")
# Plot
ggboxplot(dat_collapsed, x="Condition", y="RT1", fill="Duration", add="jitter")
# Plot
ggboxplot(dat_collapsed, x="Condition", y="invRT", fill="Duration", add="jitter")
# Plot
ggboxplot(dat_collapsed, x="Condition", y="extendRT", fill="Duration", add="jitter")
# Plot
ggboxplot(dat_collapsed, x="Condition", y="ExtendRT", fill="Duration", add="jitter")
# Plot
ggboxplot(dat_collapsed, x="Condition", y="RT", fill="Duration", add="jitter")
# Plot
ggboxplot(dat_collapsed, x="Condition", y="RT1", fill="Duration", add="jitter")
# Mixed Anova Results
aov_rt1 <- aov(RT1 ~ Condition*Duration + Error(SubID/Duration), data=dat_collapsed)
pander(summary(aov_rt1))
# Summary Table
dat_collapsed %>%
group_by(Condition, Duration) %>%
summarise(meanRT1 = mean(ExtendRT), sdRT1 = sd(ExtendRT)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
ggboxplot(dat_collapsed, x="Condition", y="ExtendRT", fill="Duration", add="jitter")
aov_rt1 <- aov(ExtendRT ~ Condition*Duration + Error(SubID/Duration), data=dat_collapsed)
pander(summary(aov_rt1))
# Summary Table
dat_collapsed %>%
group_by(Condition, Duration) %>%
summarise(meanRT1 = mean(ExtendRT), sdRT1 = sd(ExtendRT)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
ggboxplot(dat_collapsed, x="Condition", y="ExtendRT", fill="Duration", add="jitter")
aov_rt1 <- aov(invRT ~ Condition*Duration + Error(SubID/Duration), data=dat_collapsed)
pander(summary(aov_rt1))
# Summary Table
dat_collapsed %>%
group_by(Condition, Duration) %>%
summarise(meanRT1 = mean(ExtendRT), sdRT1 = sd(ExtendRT)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
ggboxplot(dat_collapsed, x="Condition", y="ExtendRT", fill="Duration", add="jitter")
aov_rt1 <- aov(ExtendRT ~ Condition*Duration + Error(SubID/Duration), data=dat_collapsed)
pander(summary(aov_rt1))
# Summary Table
dat_collapsed %>%
group_by(Condition, Duration) %>%
summarise(meanRT = mean(ChoiceRT), sdRT1 = sd(ChoiceRT)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
# Plot
ggboxplot(dat_collapsed, x="Condition", y="ChoiceRT", fill="Duration", add="jitter")
# Mixed Anova Results
aov_rt1 <- aov(ChoiceRT ~ Condition*Duration + Error(SubID/Duration), data=dat_collapsed)
pander(summary(aov_rt1))
# Box Plot
ggboxplot(dat_collapsed, x="Condition", y="Target", fill="Duration", add = "jitter")
# Table
dat_collapsed %>%
group_by(Condition, Duration) %>%
summarise(meanTarget = mean(Target), sdTarget = sd(Target)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
# Box Plot
ggboxplot(dat_collapsed, x="Condition", y="Target", fill="Duration", add = "jitter")
# Table
dat_collapsed %>%
group_by(Condition, Duration) %>%
summarise(meanTarget = mean(Target), sdTarget = sd(Target)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
# Box Plot
ggboxplot(dat_collapsed, x="Condition", y="Target", fill="Duration", add = "jitter")
# ANOVA Results
aov.Target <- aov(Target ~ Condition*Duration + Error(SubID/Duration), data=dat_collapsed)
summary(aov.Target)
#a <- emmeans(aov.Target, "Condition")
#pairs(a)
lmer(Target ~ Condition*Duration + (1|SubID), data = dat_collapsed)
summary(lmer(Target ~ Condition*Duration + (1|SubID), data = dat_collapsed))
summary(lmer(Target ~ Condition*Duration + RT1 + (1|SubID), data = dat_collapsed))
summary(lmer(Target ~ Condition*Duration + extendRT + (1|SubID), data = dat_collapsed))
summary(lmer(Target ~ Condition*Duration + EtendRT + (1|SubID), data = dat_collapsed))
summary(lmer(Target ~ Condition*Duration + ExtendRT + (1|SubID), data = dat_collapsed))
summary(lmer(Target ~ Condition*Duration + RT1 + (1|SubID), data = dat_collapsed))
summary(lmer(Target ~ Condition*Duration*RT1 + (1|SubID), data = dat_collapsed))
summary(lmer(Target ~ Condition*Duration*RT1 + (1|SubID) + (1|ItemID), data = dat_collapsed))
summary(lmer(Target ~ Condition*Duration*RT1 + (1|SubID) + (1|Trial1), data = dat_collapsed))
summary(glmer(Target ~ Condition*Duration*RT1 + (1|SubID), data = dat_collapsed))
summary(glmer(Target ~ Condition*Duration + RT1 + (1|SubID), data = dat_collapsed))
summary(glmer(Target ~ Condition*Duration + RT1 + (1|SubID), data = dat_collapsed, family="logit"))
summary(glmer(Target ~ Condition*Duration + RT1 + (1|SubID), data = dat_collapsed, family="logit"))
?glmer
summary(glmer(Target ~ Condition*Duration + RT1 + (1|SubID), data = dat_collapsed, family="binomial"))
summary(glmer(Target ~ Condition*Duration + RT1 + (1|SubID), data = dat, family="binomial"))
summary(glmer(Target ~ RT1 + (1|SubID), data = dat[dat$Condition=='choose',], family="binomial"))
summary(glmer(Target ~ Duration*RT1 + (1|SubID), data = dat[dat$Condition=='choose',], family="binomial"))
summary(glmer(Target ~ Duration*invRT + (1|SubID), data = dat[dat$Condition=='choose',], family="binomial"))
summary(glmer(Target ~ Duration*extendRT + (1|SubID), data = dat[dat$Condition=='choose',], family="binomial"))
summary(glmer(Target ~ Duration*extendRT + (1|SubID), data = dat[dat$Condition=='choose' & dat$extendRT < 20,], family="binomial"))
summary(glmer(Target ~ Duration*extendRT + (1|SubID), data = dat[dat$Condition=='choose' & dat$extendRT < 100,], family="binomial"))
summary(glmer(Target ~ Duration*extendRT + (1|SubID), data = dat[dat$Condition=='choose' & dat$extendRT < 15,], family="binomial"))
summary(glmer(Target ~ Duration*extendRT + (1|SubID), data = dat[dat$Condition=='choose' & dat$extendRT < 15 & Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ Duration*extendRT + (1|SubID), data = dat[dat$Condition=='choose' & dat$extendRT < 15 & dat$Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ extendRT + (1|SubID), data = dat[dat$Condition=='choose' & dat$extendRT < 15 & dat$Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ extendRT + (1|SubID), data = dat[dat$Condition=='choose' & dat$extendRT < 15 & dat$Duration == '6sec',], family="binomial"))
summary(glmer(Target ~ extendRT + (1|SubID), data = dat[dat$Condition=='choose' & dat$Duration == '4sec',], family="binomial"))
dat[dat$Condition=='choose' & dat$Duration == '4sec',
]
summary(glmer(Target ~ extendRT + (1|SubID), data = dat[dat$Condition=='choose' & dat$Duration == '4sec'], family="binomial"))
dat[dat$Condition=='choose' & dat$Duration == '4sec',]
dat
summary(glmer(Target ~ extendRT + (1|SubID), data = dat_choose[dat_choose$Duration == '2sec',], family="binomial"))
dat_choose <- dat %>% filter(Condition == 'choose', extendRT < 15)
gghistogram(dat$extendRT)
gghistogram(dat_choose$extendRT)
choose_target <- glmer(Target ~ Duration*RT1 + (1|SubID), data = dat_choose, family = binomial)
sim_slopes(choose_target, pred=RT1, modx=Duration, johnson_neyman=TRUE)
interact_plot(model = choose_target, pred = RT1, modx = Duration)
choose_target <- glmer(Target ~ Duration*extendRT + (1|SubID), data = dat_choose, family = binomial)
sim_slopes(choose_target, pred=extendRT, modx=Duration, johnson_neyman=TRUE)
interact_plot(model = choose_target, pred = extendRT, modx = Duration)
#summary(glmer(Target ~ RT1 + (1|SubID), data = dat_choose, family = binomial))
summary(glmer(Target ~ RT1*Duration + (1|SubID), data = dat_choose, family = binomial))
summary(glmer(Target ~ extendRT + (1|SubID), data = dat_choose[dat_choose$Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ extendRT + (1|SubID), data = dat[dat$Condition=='choose' & dat$Duration == '6sec'], family="binomial"))
summary(glmer(Target ~ extendRT + (1|SubID), data = dat_choose[dat_choose$Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ extendRT + (1|SubID), data = dat_choose[dat_choose$Duration == '6sec',], family="binomial"))
dat_choose <- dat %>% filter(Condition == 'choose', extendRT < 15)
dat_choose <- dat %>% filter(Condition == 'choose')
gghistogram(dat$extendRT)
gghistogram(dat_choose$extendRT)
choose_target <- glmer(Target ~ Duration*RT1 + (1|SubID), data = dat_choose, family = binomial)
sim_slopes(choose_target, pred=RT1, modx=Duration, johnson_neyman=TRUE)
interact_plot(model = choose_target, pred = RT1, modx = Duration)
choose_target <- glmer(Target ~ Duration*extendRT + (1|SubID), data = dat_choose, family = binomial)
sim_slopes(choose_target, pred=extendRT, modx=Duration, johnson_neyman=TRUE)
interact_plot(model = choose_target, pred = extendRT, modx = Duration)
#summary(glmer(Target ~ RT1 + (1|SubID), data = dat_choose, family = binomial))
summary(glmer(Target ~ RT1*Duration + (1|SubID), data = dat_choose, family = binomial))
summary(glmer(Target ~ extendRT + (1|SubID), data = dat_choose[dat_choose$Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ extendRT + (1|SubID), data = dat_choose[dat_choose$Duration == '6sec',], family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose[dat_choose$Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose[dat_choose$Duration == '6sec',], family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose[dat_choose$Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose[dat_choose$Duration == '6sec',], family="binomial"))
summary(glmer(Target ~ invRT*Duration + (1|SubID), data = dat_choose, family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose[dat_choose$Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose[dat_choose$Duration == '6sec',], family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose, family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose[dat_choose$Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose[dat_choose$Duration == '6sec',], family="binomial"))
summary(glmer(Target ~ invRT*Duration + (1|SubID), data = dat_choose, family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose[dat_choose$Duration == '2sec',], family="binomial"))
summary(glmer(Target ~ invRT + (1|SubID), data = dat_choose[dat_choose$Duration == '6sec',], family="binomial"))
summary(glmer(Target ~ extendRT*Duration + (1|SubID), data = dat_choose, family="binomial"))
install.packages(c("assertthat", "backports", "broom", "callr", "cli", "cluster", "colorspace", "data.table", "devtools", "elliptic", "fs", "ggplot2", "git2r", "glue", "gtable", "highr", "jmvcore", "kableExtra", "lazyeval", "MASS", "Matrix", "mgcv", "nlme", "openssl", "pkgbuild", "polynom", "processx", "purrr", "Rcpp", "readxl", "remotes", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "stringi", "survival", "sys", "tibble", "tinytex", "usethis", "xfun", "zip", "zoo"))
install.packages(c("assertthat", "backports", "broom", "callr", "cli", "cluster", "colorspace", "data.table", "devtools", "elliptic", "fs", "ggplot2", "git2r", "glue", "gtable", "highr", "jmvcore", "kableExtra", "lazyeval", "MASS", "Matrix", "mgcv", "nlme", "openssl", "pkgbuild", "polynom", "processx", "purrr", "Rcpp", "readxl", "remotes", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "stringi", "survival", "sys", "tibble", "tinytex", "usethis", "xfun", "zip", "zoo"))
install.packages(c("assertthat", "backports", "broom", "callr", "cli", "cluster", "colorspace", "data.table", "devtools", "elliptic", "fs", "ggplot2", "git2r", "glue", "gtable", "highr", "jmvcore", "kableExtra", "lazyeval", "MASS", "Matrix", "mgcv", "nlme", "openssl", "pkgbuild", "polynom", "processx", "purrr", "Rcpp", "readxl", "remotes", "rlang", "rmarkdown", "rpart", "rstudioapi", "rvest", "sandwich", "stringi", "survival", "sys", "tibble", "tinytex", "usethis", "xfun", "zip", "zoo"))
knitr::opts_chunk$set(echo = TRUE)
dat.collapsed <- dat %>%
na.omit() %>%
group_by(subID, TrialType) %>%
summarise(MeanTarget = mean(Target), SDTarget=sd(Target)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
dat.collapsed <- dat %>%
na.omit() %>%
group_by(subID, TrialType) %>%
summarise(MeanTarget = mean(Target), SDTarget=sd(Target)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
setwd('/Users/sangsuk/Documents/MATLAB/Anchor/Behavioral_Analysis/')
Packages <- c("readxl", "readr", "lme4", "tidyverse","ggplot2","jmv","lmerTest","epiDisplay","kableExtra","ggpubr","medmod","pander","margins","probemod","jtools","interactions","dabestr","multicomp",'emmeans')
lapply(Packages, require, character.only = TRUE)
# Read Data
dat <- read_csv('choice_task.csv')
dat <- dat %>%
filter(grepl("Sub",SubID)) %>%
mutate(TrialType = ifelse((Left_Cond == 1 & Right_Cond == 2) | (Left_Cond == 2 & Right_Cond == 1), 1,
ifelse((Left_Cond == 1 & Right_Cond == 3) | (Left_Cond == 3 & Right_Cond == 1), 2,3)),
Preference = ifelse(Choice=="L", Left_Cond, Right_Cond),
Target = ifelse(Preference==2, 1, 0))
dat.collapsed <- dat %>%
na.omit() %>%
group_by(subID, TrialType) %>%
summarise(MeanTarget = mean(Target), SDTarget=sd(Target)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
dat.collapsed <- dat %>%
na.omit() %>%
group_by(SubID, TrialType) %>%
summarise(MeanTarget = mean(Target), SDTarget=sd(Target)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
dat.collapsed %>% ggboxplot(x="TrialType", y="Target", add ="jitter", ylab="Target Choice")
dat.collapsed <- dat %>%
na.omit() %>%
group_by(SubID, TrialType) %>%
summarise(MeanTarget = mean(Target), SDTarget=sd(Target))
View(dat.collapsed)
dat.collapsed <- dat %>%
na.omit() %>%
group_by(SubID, TrialType) %>%
summarise(Target = mean(Target))
dat.collapsed <- dat %>%
na.omit() %>%
group_by(SubID, TrialType) %>%
summarise(Target = mean(Target))
dat.collapsed %>%
na.omit() %>%
group_by(TrialType) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
dat.collapsed %>% ggboxplot(x="TrialType", y="Target", add ="jitter", ylab="Target Choice")
dat.collapsed <- dat %>%
na.omit() %>%
group_by(SubID, TrialType) %>%
summarise(Target = mean(Target))
dat.collapsed %>%
na.omit() %>%
group_by(TrialType) %>%
summarise(Mean = mean(Target), SD = sd(Target)) %>%
mutate_if(is.numeric, round, 2) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position="left")
dat.collapsed %>% ggboxplot(x="TrialType", y="Target", add ="jitter", ylab="Target Choice")
install.packages(c("boot", "clipr", "dbplyr", "emmeans", "ggforce", "interactions", "jmv", "rgeos", "sjPlot", "sys", "xtable"))
library(ggplot2)
library(rjags)
library(coda)
set.seed(4444)
N <- 100  # number of subjects
Mu <- 100
Sigma <- 15  # standard deviation of error
ggplot(Data, aes(x = y)) + geom_density(fill = "lightblue", alpha = 0.5)
ggplot(Data, aes(x = y)) + geom_density(fill = "lightblue", alpha = 0.5)
library(rjags)
library(coda)
library(ggplot2)
set.seed(4444)
N <- 100  # number of subjects
Mu <- 100
Sigma <- 15  # standard deviation of error
y <- rnorm(n = N, mean = Mu, sd = Sigma)
Data <- data.frame(y)
# Convert data to input format required by JAGS
jagsdata <- list(y = y)
ggplot(Data, aes(x = y)) + geom_density(fill = "lightblue", alpha = 0.5)
c(n = length(y), mean = mean(y), sd = sd(y), se.mean = sd(y)/sqrt(length(y)))
jags.script <- "
model {
# Model
for (i in 1:length(y)) {
y[i]  ~ dnorm(mu, tau)
}
# Priors
mu  ~ dnorm(0, 0.001);
tau ~ dgamma(0.001, 0.001);
# Transformations
sigma  <- 1.0/sqrt(tau);
}
"
mod1 <- jags.model(textConnection(jags.script), data = jagsdata,
n.chains = 4, n.adapt = 1000)
update(mod1, 200)  # burn in
# monitor
mod1.samples <- coda.samples(model = mod1, variable.names = c("mu",
"sigma"), n.iter = 1000)
plot(mod1.samples)
summary(mod.samples)
summary(mod1.samples)
clear
library(processR)
instrall.packages("processR")
if(!require(devtools)) install.packages("devtools")
devtools::install_github("cardiomoon/processR")
library(processR)
devtools::install_github("cardiomoon/processR")
install.packages("processR")
library(processR)
sort(pmacro$no)
pmacroModel(8)
pmacroModel(1)
pmacroModel(2)
pmacroModel(3)
pmacroModel(4)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
pmacroModel(8,labels=labels)
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(X="frame",M="justify",Y="donate",moderator=moderator)
cat(model)
install.packages(c("bayestestR", "checkmate", "cluster", "dbplyr", "fs", "ggeffects", "jmvcore", "lmtest", "markdown", "nlme", "numDeriv", "openssl", "performance", "qvcalc", "rcmdcheck", "reprex", "rvest", "sjlabelled", "sjstats", "snakecase", "tibble", "zoo"))
library(blogdown)
library(devtools) # before this you may need to install devtools
install_github("hemken/Statamarkdown")
install.packages("devtools")
library(devtools) # before this you may need to install devtools
install_github("hemken/Statamarkdown")
knitr::opts_chunk$set(echo = TRUE)
library(Statamarkdown)
statapath <- "/Applications/Stata/StataSE.app/Contents/MacOS/StataSE"
statapath <- "/Applications/Stata/StataSE.app/Contents/MacOS/stata-se"
library(Statamarkdown)
statapath <- "/Applications/Stata/StataSE.app/Contents/MacOS/StataSE
library(Statamarkdown)
statapath <- "/Applications/Stata/StataSE.app/Contents/MacOS/StataSE"
install.packages(c("afex", "callr", "checkmate", "dabestr", "deSolve", "digest", "dplyr", "ellipsis", "emmeans", "flextable", "git2r", "haven", "insight", "lavaan", "pillar", "processx", "quantreg", "rlang", "rvg", "tinytex", "usethis", "zip"))
setwd("/users/syoon1/Documents/website/ssyoon.github.io")
rmarkdown::render_site()
setwd("/users/sangsuk/Documents/website/ssyoon.github.io")
rmarkdown::render_site()
ls
getwd()
dir()
setwd("/users/sangsuk/Documents/website/ssyoon.github.io")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("/users/sangsuk/Documents/website/ssyoon.github.io")
rmarkdown::render_site()
setwd("/users/sangsuk/Documents/website/ssyoon.github.io")
rmarkdown::render_site()
